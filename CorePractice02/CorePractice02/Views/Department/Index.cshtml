@using CorePractice02.Models
@model IEnumerable<Department>
@{
    ViewData["Title"] = "Departments Index";
}

<h1>Index</h1>

<div class="row">
    <div class="col-md-10 offset-md-2">
        <table class="table">
            <tr>
                <!-- <th> Html.DisplayNameFor(model => model.Name) </th> -->
                <th>Name</th>
                <th>Location</th>
                <th>Employee Count</th>
                <th>操作</th>
            </tr>
            <!-- 比起for循環的Html.DisplayFor()的方式，這個等同是將要呈現的模板另外寫到其他檔案讓它參考 -->
            @Html.DisplayForModel()
        </table>
    </div>
</div>
<div class="row">
    <div class="col-md-2">
        <!-- 調用繼承自ViewComponent的InvokeAsync方法，name是指定調用名為CompanySummary的file，
            且會自動尋找Default使用，arguments塞入該InvokeAsync方法的參數 -->
        @await Component.InvokeAsync(name: "CompanySummary", arguments: new { title = "部門的匯總" })
        <!-- 另外一種調用方法，但此方式要先將專案自訂的TagHelper註冊進去，可到_ViewImports.cshtml添加 -->
        <vc:company-summary title="部門的匯總2"></vc:company-summary>
    </div>
    <div class="col-md-4">
        <!-- 以前的@Html.Action("Add") -->
        <a asp-action="Add">Add</a>
    </div>
</div>